{"version":3,"file":"bfcsStatusBar_android.mjs","sources":["../../../../../../statusbar/dist/esm/bfcsStatusBar_android.mjs"],"sourcesContent":["class BfcsStatusBar extends HTMLElement {\n  constructor() {\n    super();\n    this._ffi = system_ui;\n  }\n  connectedCallback() {\n    let observer = new MutationObserver((mutations) => {\n      this.setStatusBarColor();\n    });\n    observer.observe(this, {\n      subtree: true,\n      childList: true,\n      attributes: true\n    });\n    this.setStatusBarColor();\n  }\n  disconnectedCallback() {\n  }\n  async setStatusBarColor() {\n    const childNode = this.querySelector(\"dweb-status-bar-color\");\n    if (childNode) {\n      const colorHex = childNode.getAttribute(\"colorhex\") ? childNode.getAttribute(\"colorhex\") : void 0;\n      const opacity = childNode.getAttribute(\"opacity\") ? parseFloat(childNode.getAttribute(\"opacity\")) : 0.5;\n      const darkIcons = childNode.getAttribute(\"darkicons\") ? parseInt(childNode.getAttribute(\"darkicons\")) : 0;\n      this._ffi.setStatusBarColor(this.getColorInt(colorHex, opacity), darkIcons);\n    }\n  }\n  getColorInt(color = \"#ffffff\", opacity = 0.5) {\n    return parseInt(color.slice(1), 16) + (opacity * 255 << 8 * 3);\n  }\n  getStatusBarVisible() {\n    return new Promise((resolve, reject) => {\n      let isVisible = this._ffi.getStatusBarVisible();\n      resolve(isVisible);\n    });\n  }\n  toggleStatusBarVisible() {\n    return new Promise((resolve, reject) => {\n      this._ffi.toggleStatusBarVisible(0);\n      resolve();\n    });\n  }\n  getStatusBarOverlay() {\n    return new Promise((resolve, reject) => {\n      let overlay = this._ffi.getStatusBarOverlay();\n      resolve(overlay);\n    });\n  }\n  toggleStatusBarOverlay() {\n    return new Promise((resolve, reject) => {\n      this._ffi.toggleStatusBarOverlay(0);\n      resolve();\n    });\n  }\n  static get observedAttributes() {\n    return [\"overlay\", \"hidden\"];\n  }\n  attributeChangedCallback(attrName, oldVal, newVal) {\n    if (attrName === \"overlay\") {\n      if (this.hasAttribute(attrName)) {\n        this._ffi.toggleStatusBarOverlay(1);\n      }\n    } else if (attrName === \"hidden\") {\n      if (this.hasAttribute(attrName)) {\n        this.toggleStatusBarVisible();\n      }\n    }\n  }\n}\nexport { BfcsStatusBar };\n//# sourceMappingURL=bfcsStatusBar_android.mjs.map\n"],"names":[],"mappings":"AAAA,MAAM,sBAAsB,YAAY;AAAA,EACtC,cAAc;AACZ;AACA,SAAK,OAAO;AAAA,EACb;AAAA,EACD,oBAAoB;AAClB,QAAI,WAAW,IAAI,iBAAiB,CAAC,cAAc;AACjD,WAAK,kBAAiB;AAAA,IAC5B,CAAK;AACD,aAAS,QAAQ,MAAM;AAAA,MACrB,SAAS;AAAA,MACT,WAAW;AAAA,MACX,YAAY;AAAA,IAClB,CAAK;AACD,SAAK,kBAAiB;AAAA,EACvB;AAAA,EACD,uBAAuB;AAAA,EACtB;AAAA,QACK,oBAAoB;AACxB,UAAM,YAAY,KAAK,cAAc,uBAAuB;AAC5D,QAAI,WAAW;AACb,YAAM,WAAW,UAAU,aAAa,UAAU,IAAI,UAAU,aAAa,UAAU,IAAI;AAC3F,YAAM,UAAU,UAAU,aAAa,SAAS,IAAI,WAAW,UAAU,aAAa,SAAS,CAAC,IAAI;AACpG,YAAM,YAAY,UAAU,aAAa,WAAW,IAAI,SAAS,UAAU,aAAa,WAAW,CAAC,IAAI;AACxG,WAAK,KAAK,kBAAkB,KAAK,YAAY,UAAU,OAAO,GAAG,SAAS;AAAA,IAC3E;AAAA,EACF;AAAA,EACD,YAAY,QAAQ,WAAW,UAAU,KAAK;AAC5C,WAAO,SAAS,MAAM,MAAM,CAAC,GAAG,EAAE,IAAK,WAAU,OAAO,IAAI;AAAA,EAC7D;AAAA,EACD,sBAAsB;AACpB,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,UAAI,YAAY,KAAK,KAAK,oBAAmB;AAC7C,cAAQ,SAAS;AAAA,IACvB,CAAK;AAAA,EACF;AAAA,EACD,yBAAyB;AACvB,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,WAAK,KAAK,uBAAuB,CAAC;AAClC;IACN,CAAK;AAAA,EACF;AAAA,EACD,sBAAsB;AACpB,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,UAAI,UAAU,KAAK,KAAK,oBAAmB;AAC3C,cAAQ,OAAO;AAAA,IACrB,CAAK;AAAA,EACF;AAAA,EACD,yBAAyB;AACvB,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,WAAK,KAAK,uBAAuB,CAAC;AAClC;IACN,CAAK;AAAA,EACF;AAAA,aACU,qBAAqB;AAC9B,WAAO,CAAC,WAAW,QAAQ;AAAA,EAC5B;AAAA,EACD,yBAAyB,UAAU,QAAQ,QAAQ;AACjD,QAAI,aAAa,WAAW;AAC1B,UAAI,KAAK,aAAa,QAAQ,GAAG;AAC/B,aAAK,KAAK,uBAAuB,CAAC;AAAA,MACnC;AAAA,IACP,WAAe,aAAa,UAAU;AAChC,UAAI,KAAK,aAAa,QAAQ,GAAG;AAC/B,aAAK,uBAAsB;AAAA,MAC5B;AAAA,IACF;AAAA,EACF;AACH;;"}