{"version":3,"file":"channel.mjs","sources":["../../../../../../../../../../android-deno-runtime-example/plaoc/gateway/dist/esm/channel.mjs"],"sourcesContent":["import \"@bfsx/typings\";\nconst createChannel = async () => {\n  const server = Deno.listen({ port: 8080 });\n  console.log(`HTTP webserver running.  Access it at:  http://localhost:8080/`);\n  try {\n    for await (const conn of server) {\n      (async () => {\n        const httpConn = Deno.serveHttp(conn);\n        try {\n          for await (const { respondWith } of httpConn) {\n            await respondWith(new Response(\"hello world\", {\n              status: 200\n            }));\n          }\n        } catch (error) {\n          console.warn(\"Error\", error);\n        }\n      })();\n    }\n  } catch (error) {\n    console.warn(\"Error\", error);\n  }\n};\nexport { createChannel };\n//# sourceMappingURL=channel.mjs.map\n"],"names":[],"mappings":"AACK,MAAC,gBAAgB,YAAY;AAChC,QAAM,SAAS,KAAK,OAAO,EAAE,MAAM,KAAI,CAAE;AACzC,UAAQ,IAAI,gEAAgE;AAC5E,MAAI;AACF,qBAAiB,QAAQ,QAAQ;AAC/B,MAAC,aAAY;AACX,cAAM,WAAW,KAAK,UAAU,IAAI;AACpC,YAAI;AACF,2BAAiB,EAAE,iBAAiB,UAAU;AAC5C,kBAAM,YAAY,IAAI,SAAS,eAAe;AAAA,cAC5C,QAAQ;AAAA,YACT,CAAA,CAAC;AAAA,UACH;AAAA,QACF,SAAQ,OAAP;AACA,kBAAQ,KAAK,SAAS,KAAK;AAAA,QAC5B;AAAA,MACT;IACK;AAAA,EACF,SAAQ,OAAP;AACA,YAAQ,KAAK,SAAS,KAAK;AAAA,EAC5B;AACH;;"}