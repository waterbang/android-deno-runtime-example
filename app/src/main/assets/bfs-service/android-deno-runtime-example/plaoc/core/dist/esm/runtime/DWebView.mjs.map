{"version":3,"file":"DWebView.mjs","sources":["../../../../../../../../../../../android-deno-runtime-example/plaoc/core/dist/esm/runtime/DWebView.mjs"],"sourcesContent":["import { callDeno } from \"../deno/android.fn.mjs\";\nimport { deno } from \"../deno/index.mjs\";\nclass DWebView {\n  constructor(metaData) {\n    this.isWaitingData = 1;\n    this.hightWaterMark = 1;\n    this.url = metaData.baseUrl;\n    this.initAppMetaData(metaData);\n    deno.createHeader();\n  }\n  waterOverflow() {\n    if (this.isWaitingData < this.hightWaterMark)\n      return;\n    console.log(\"waterOverflow:\", this.isWaitingData);\n    deno.callEvalJsFunction(callDeno.evalJsRuntime, `\"javascript:dwebPlugin.dispatchStringMessage('\\u54C8\\u54C8')\"`);\n  }\n  initAppMetaData(metaData) {\n    if (Object.keys(metaData).length === 0)\n      return;\n    deno.callFunction(callDeno.initMetaData, `'${JSON.stringify(metaData)}'`);\n  }\n  activity(entry) {\n    deno.callFunction(callDeno.openDWebView, `\"${new URL(entry, this.url).href}\"`);\n  }\n  createChannel() {\n  }\n  openWait() {\n    if (this.isWaitingData >= Number.MAX_SAFE_INTEGER)\n      return;\n    this.isWaitingData++;\n  }\n  closeWait() {\n    if (this.isWaitingData === 0)\n      return;\n    this.isWaitingData--;\n  }\n}\nexport { DWebView };\n//# sourceMappingURL=DWebView.mjs.map\n"],"names":[],"mappings":";;AAEA,MAAM,SAAS;AAAA,EACb,YAAY,UAAU;AACpB,SAAK,gBAAgB;AACrB,SAAK,iBAAiB;AACtB,SAAK,MAAM,SAAS;AACpB,SAAK,gBAAgB,QAAQ;AAC7B,SAAK,aAAY;AAAA,EAClB;AAAA,EACD,gBAAgB;AACd,QAAI,KAAK,gBAAgB,KAAK;AAC5B;AACF,YAAQ,IAAI,kBAAkB,KAAK,aAAa;AAChD,SAAK,mBAAmB,SAAS,eAAe,+DAA+D;AAAA,EAChH;AAAA,EACD,gBAAgB,UAAU;AACxB,QAAI,OAAO,KAAK,QAAQ,EAAE,WAAW;AACnC;AACF,SAAK,aAAa,SAAS,cAAc,IAAI,KAAK,UAAU,QAAQ,IAAI;AAAA,EACzE;AAAA,EACD,SAAS,OAAO;AACd,SAAK,aAAa,SAAS,cAAc,IAAI,IAAI,IAAI,OAAO,KAAK,GAAG,EAAE,OAAO;AAAA,EAC9E;AAAA,EACD,gBAAgB;AAAA,EACf;AAAA,EACD,WAAW;AACT,QAAI,KAAK,iBAAiB,OAAO;AAC/B;AACF,SAAK;AAAA,EACN;AAAA,EACD,YAAY;AACV,QAAI,KAAK,kBAAkB;AACzB;AACF,SAAK;AAAA,EACN;AACH;;"}