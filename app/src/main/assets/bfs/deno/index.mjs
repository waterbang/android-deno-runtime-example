import t from"./rust.ffi.mjs";const e=new Uint8Array(new ArrayBuffer(1)),n=new Uint8Array(new ArrayBuffer(2));e[0]=1;const r=new class{createHeader(){const t=n.length-1;n[t]+=1,255==(255&n[t])&&(this.bitLeftShifts(),n[t]=0),console.log("headView =======>",Array.from(n).map((t=>t.toString(2))))}callFunction(e,n){const r=this.structureBinary(e,n);t.send_buffer(r,r.length)}structureBinary(t,r=""){const o=`{"function":["${t}"],"data":${r}}`,c=(new TextEncoder).encode(o);return this.concatenate(e,n,c)}bitLeftShifts(){let t=0;for(let e=n.length-1;e>=0;e--){const r=n[e],o=(128&r)>0?1:0;n[e]=255&(r<<1|t),t=o}}concatenate(...t){let e=0;for(let o of t)e+=o.length;const n=new Uint8Array(e);let r=0;for(let o of t)n.set(o,r),r+=o.length;return n}};export{r as deno};
