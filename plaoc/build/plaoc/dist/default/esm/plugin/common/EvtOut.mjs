var e,t,a,r,n=(e,t,a)=>{if(!t.has(e))throw TypeError("Cannot "+a)},o=(e,t,a)=>(n(e,t,"read from private field"),a?a.call(e):t.get(e)),s=(e,t,a)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,a)};class i{constructor(){s(this,a),s(this,e,void 0),s(this,t,new ReadableStream({start:t=>{return o=t,n(a=this,r=e,"write to private field"),s?s.call(a,o):r.set(a,o),o;var a,r,o,s}}))}emit(t){o(this,e).enqueue(t)}toAsyncGenerator(){const e=o(this,t).tee()[1].getReader(),s=(i=this,c=a,l=r,n(i,c,"access private method"),l).call(this,e);var i,c,l;const h=s.return;s.return=t=>(e.cancel(),h.call(s,t));const d=s.throw;return s.throw=t=>(e.cancel(),d.call(s,t)),s}}e=new WeakMap,t=new WeakMap,a=new WeakSet,r=async function*(e){for(;;){const t=await e.read();if(t.done)break;yield t.value}};export{i as EvtOut};
