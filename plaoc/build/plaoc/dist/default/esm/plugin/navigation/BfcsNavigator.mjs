var t,e,i,n,s,r,o,h,a=(t,e,i)=>(((t,e,i)=>{if(!e.has(t))throw TypeError("Cannot "+i)})(t,e,"read from private field"),i?i.call(t):e.get(t)),f=(t,e,i)=>{if(e.has(t))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(t):e.set(t,i)};import{EvtOut as c}from"../common/EvtOut.mjs";const u=class{constructor(a,u,p){f(this,t,[]),f(this,e,new c),f(this,i,new c),f(this,n,new c),f(this,s,new WeakSet),f(this,r,new c),f(this,o,new c),f(this,h,new c),this.info=a,this.parentInfo=u,this._ffi=p}init(){return console.log("init"),"init"}get length(){return a(this,t).length}at(e){return a(this,t)[e<0?a(this,t).length+e:e]}push(i){const n=this._ffi.push(this.info.nid,i);return n&&(a(this,t).push(i),a(this,e).emit({route:i})),n}get onPush(){return a(this,e).toAsyncGenerator()}pop(e=1){const n=this._ffi.pop(this.info.nid,e);if(n>0)for(const s of a(this,t).splice(-n))a(this,i).emit({route:s});return n}get onPop(){return a(this,i).toAsyncGenerator()}replace(e,i=-1){const s=i<0?a(this,t).length+i:i;if(s in a(this,t)==!1)return!1;const r=this._ffi.replace(this.info.nid,s,e);if(r){const s=a(this,t).splice(i,1,e);a(this,n).emit({newRoute:e,oldRoute:s[0]})}return r}get onReplace(){return a(this,n).toAsyncGenerator()}fork(t){const e=this._ffi.fork(this.info.nid,t.data);if(e>=0){const i=new u(Object.freeze({data:t.data,nid:e}),this.info,this._ffi);return a(this,s).add(i),a(this,r).emit({newNavigator:i,fromNavigator:this}),i}}get onFork(){return a(this,r).toAsyncGenerator()}checkout(t){return!1!==a(this,s).has(t)&&this._ffi.checkout(this.info.nid,t.info.nid)}get onActivated(){return a(this,o).toAsyncGenerator()}destroy(t,e){if(!1===a(this,s).has(t))return!1;const i=this._ffi.destroy(this.info.nid,t.info.nid);return i&&(a(this,s).delete(t),a(t,h).emit({reason:e})),i}get onDestroy(){return a(this,h).toAsyncGenerator()}};let p=u;t=new WeakMap,e=new WeakMap,i=new WeakMap,n=new WeakMap,s=new WeakMap,r=new WeakMap,o=new WeakMap,h=new WeakMap;export{p as BfcsNavigator};
